(************************************************)
(*       AUTOGENERATED FILE - DO NOT EDIT!      *)
(************************************************)
(* Generated by: ocaml-protoc-plugin            *)
(* https://github.com/issuu/ocaml-protoc-plugin *)
(************************************************)
(*
   Source: options.proto
   Syntax: proto3 
   Parameters:
     debug=false
     annot=''
     opens=[]
     int64_as_int=true
     int32_as_int=true
     fixed_as_int=false
     singleton_record=false
*)

open Ocaml_protoc_plugin.Runtime
module rec Ocaml_debug : sig
  type t = bool option 
  val get: Descriptor.Google.Protobuf.FileOptions.t -> bool option Runtime'.Result.t
  val set: Descriptor.Google.Protobuf.FileOptions.t -> bool option -> Descriptor.Google.Protobuf.FileOptions.t
end = struct 
  type t = bool option 
  let get extendee = Runtime'.Extensions.get Runtime'.Deserialize.C.( basic_opt (7967, bool) ^:: nil ) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions')
  let set extendee t =
    let extensions' = Runtime'.Extensions.set (Runtime'.Serialize.C.( basic_opt (7967, bool) ^:: nil )) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions') t in
    { extendee with Descriptor.Google.Protobuf.FileOptions.extensions' = extensions' }
  
end
and Ocaml_annot : sig
  type t = string option 
  val get: Descriptor.Google.Protobuf.FileOptions.t -> string option Runtime'.Result.t
  val set: Descriptor.Google.Protobuf.FileOptions.t -> string option -> Descriptor.Google.Protobuf.FileOptions.t
end = struct 
  type t = string option 
  let get extendee = Runtime'.Extensions.get Runtime'.Deserialize.C.( basic_opt (7968, string) ^:: nil ) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions')
  let set extendee t =
    let extensions' = Runtime'.Extensions.set (Runtime'.Serialize.C.( basic_opt (7968, string) ^:: nil )) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions') t in
    { extendee with Descriptor.Google.Protobuf.FileOptions.extensions' = extensions' }
  
end
and Ocaml_opens : sig
  type t = string list 
  val get: Descriptor.Google.Protobuf.FileOptions.t -> string list Runtime'.Result.t
  val set: Descriptor.Google.Protobuf.FileOptions.t -> string list -> Descriptor.Google.Protobuf.FileOptions.t
end = struct 
  type t = string list 
  let get extendee = Runtime'.Extensions.get Runtime'.Deserialize.C.( repeated (7969, string, not_packed) ^:: nil ) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions')
  let set extendee t =
    let extensions' = Runtime'.Extensions.set (Runtime'.Serialize.C.( repeated (7969, string, not_packed) ^:: nil )) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions') t in
    { extendee with Descriptor.Google.Protobuf.FileOptions.extensions' = extensions' }
  
end
and Ocaml_singleton_record : sig
  type t = bool option 
  val get: Descriptor.Google.Protobuf.FileOptions.t -> bool option Runtime'.Result.t
  val set: Descriptor.Google.Protobuf.FileOptions.t -> bool option -> Descriptor.Google.Protobuf.FileOptions.t
end = struct 
  type t = bool option 
  let get extendee = Runtime'.Extensions.get Runtime'.Deserialize.C.( basic_opt (7970, bool) ^:: nil ) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions')
  let set extendee t =
    let extensions' = Runtime'.Extensions.set (Runtime'.Serialize.C.( basic_opt (7970, bool) ^:: nil )) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions') t in
    { extendee with Descriptor.Google.Protobuf.FileOptions.extensions' = extensions' }
  
end
and Ocaml_int64_as_int : sig
  type t = bool option 
  val get: Descriptor.Google.Protobuf.FileOptions.t -> bool option Runtime'.Result.t
  val set: Descriptor.Google.Protobuf.FileOptions.t -> bool option -> Descriptor.Google.Protobuf.FileOptions.t
end = struct 
  type t = bool option 
  let get extendee = Runtime'.Extensions.get Runtime'.Deserialize.C.( basic_opt (7971, bool) ^:: nil ) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions')
  let set extendee t =
    let extensions' = Runtime'.Extensions.set (Runtime'.Serialize.C.( basic_opt (7971, bool) ^:: nil )) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions') t in
    { extendee with Descriptor.Google.Protobuf.FileOptions.extensions' = extensions' }
  
end
and Ocaml_int32_as_int : sig
  type t = bool option 
  val get: Descriptor.Google.Protobuf.FileOptions.t -> bool option Runtime'.Result.t
  val set: Descriptor.Google.Protobuf.FileOptions.t -> bool option -> Descriptor.Google.Protobuf.FileOptions.t
end = struct 
  type t = bool option 
  let get extendee = Runtime'.Extensions.get Runtime'.Deserialize.C.( basic_opt (7972, bool) ^:: nil ) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions')
  let set extendee t =
    let extensions' = Runtime'.Extensions.set (Runtime'.Serialize.C.( basic_opt (7972, bool) ^:: nil )) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions') t in
    { extendee with Descriptor.Google.Protobuf.FileOptions.extensions' = extensions' }
  
end
and Ocaml_fixed_as_int : sig
  type t = bool option 
  val get: Descriptor.Google.Protobuf.FileOptions.t -> bool option Runtime'.Result.t
  val set: Descriptor.Google.Protobuf.FileOptions.t -> bool option -> Descriptor.Google.Protobuf.FileOptions.t
end = struct 
  type t = bool option 
  let get extendee = Runtime'.Extensions.get Runtime'.Deserialize.C.( basic_opt (7973, bool) ^:: nil ) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions')
  let set extendee t =
    let extensions' = Runtime'.Extensions.set (Runtime'.Serialize.C.( basic_opt (7973, bool) ^:: nil )) (extendee.Descriptor.Google.Protobuf.FileOptions.extensions') t in
    { extendee with Descriptor.Google.Protobuf.FileOptions.extensions' = extensions' }
  
end